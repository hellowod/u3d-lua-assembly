function main()
	print(jit and "jit on" or "jit off, pls run test with luajit")
end

local cube = CS.UnityEngine.GameObject("Script cube")


function test1()
	local transform = cube.transform
	local start = os.clock()
	for i=1,200000 do
        transform.position=transform.position
	end
	print("test1/lua " .. ((os.clock() - start)));
end

function test2()
	local transform=cube.transform
	local start = os.clock()
	for i=1,200000 do
		transform:Rotate(CS.UnityEngine.Vector3.up, 90)
	end
	print("test2/lua " .. ((os.clock() - start)));
end

function test3()
	local start = os.clock()
	for i=1,2000000 do 
		local v = CS.UnityEngine.Vector3(i,i,i)
		CS.UnityEngine.Vector3.Normalize(v)
	end
	print("test3/lua " .. ((os.clock() - start)));
end

function test4()
	local t = cube.transform
	local v = CS.UnityEngine.Vector3.one
	local start = os.clock()
	for i=1,200000 do
		local v = CS.UnityEngine.GameObject()	
	end
	print("test4/lua " .. ((os.clock() - start)));
end


function test5()
	local v = cube.transform.position
	local start = os.clock()
	for i=1,20000 do
		local v = CS.UnityEngine.GameObject()
		v:AddComponent(typeof(CS.UnityEngine.SkinnedMeshRenderer))
		local c=v:GetComponent(typeof(CS.UnityEngine.SkinnedMeshRenderer))
		c.shadowCastingMode=0
		c.receiveShadows=false
	end
	print("test5/lua " .. ((os.clock() - start)));
end

function test6()
	local transform=cube.transform
	local start = os.clock()
	for i=1,200000 do
		local t=CS.UnityEngine.Quaternion.Euler(100,100,100)
		local q=CS.UnityEngine.Quaternion.Slerp(CS.UnityEngine.Quaternion.identity,t,0.5)
	end
	print("test6/lua jit  " .. ((os.clock() - start)));
end

function test7()
	local transform=cube.transform
	local Quaternion = (jit and CS.UnityEngine.Quaternion.__raw) or CS.UnityEngine.Quaternion
	local start = os.clock()
	for i=1,200000 do
		local t=CS.UnityEngine.Quaternion.Euler(100,100,100)
		local q=CS.UnityEngine.Quaternion.Slerp(CS.UnityEngine.Quaternion.identity,t,0.5)
	end
	print("test6/lua non-jit  " .. ((os.clock() - start)));
end
